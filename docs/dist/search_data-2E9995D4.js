searchData={"items":[{"type":"module","title":"Hanoi.Algo","doc":"An algorithm solving the Towers of Hanoi problem by recursion.","ref":"Hanoi.Algo.html"},{"type":"function","title":"Hanoi.Algo.get_moves/1","doc":"An algorithm to get the list of moves to transfer stones by recursion","ref":"Hanoi.Algo.html#get_moves/1"},{"type":"function","title":"Hanoi.Algo.is_valid_move/3","doc":"A move is valid if the stone exists, the stack moved to is empty, \nor has a larger stone on it","ref":"Hanoi.Algo.html#is_valid_move/3"},{"type":"function","title":"Hanoi.Algo.move_stone/4","doc":"Returns a new board with stone moved, or an error if an invalid move","ref":"Hanoi.Algo.html#move_stone/4"},{"type":"function","title":"Hanoi.Algo.run_algo/1","doc":"An algorithm to move stones between stacks by recursion","ref":"Hanoi.Algo.html#run_algo/1"},{"type":"module","title":"Hanoi.Application","doc":"OTP Application that runs phoenix web app.\n\nCurrently also loads HanoiGame supervision tree & Genserver. This may move to\nbeing started by the web app to allow multiple games to run in parallel.\n\nAlternative entrypoint to the CLI module","ref":"Hanoi.Application.html"},{"type":"function","title":"Hanoi.Application.start/2","doc":"Application entrypoint","ref":"Hanoi.Application.html#start/2"},{"type":"module","title":"Hanoi.Board","doc":"The domain model.\n\nThe type and functions that define and create the domain data model","ref":"Hanoi.Board.html"},{"type":"function","title":"Hanoi.Board.create_board/1","doc":"Recommended way to set up the inital board with stones on left","ref":"Hanoi.Board.html#create_board/1"},{"type":"function","title":"Hanoi.Board.create_loaded_stack/1","doc":"Generally used by test code, set up stack of stones. You are required\nto set up your own board still.","ref":"Hanoi.Board.html#create_loaded_stack/1"},{"type":"function","title":"Hanoi.Board.is_complete/2","doc":"Returns true if the game is complete.\nThat is all the stones are on the right pile in correct order","ref":"Hanoi.Board.html#is_complete/2"},{"type":"type","title":"Hanoi.Board.t/0","doc":"A hanoi board formed of three piles of stones.","ref":"Hanoi.Board.html#t:t/0"},{"type":"module","title":"Hanoi.CLI","doc":"Command line application processing for CLI application","ref":"Hanoi.CLI.html"},{"type":"function","title":"Hanoi.CLI.parse_args/1","doc":"Parses command like argumennts and returns number of stones, or help.","ref":"Hanoi.CLI.html#parse_args/1"},{"type":"module","title":"Hanoi.Render","doc":"Functions for converting the internal data representation to a \ntext-based human-readable format.\n\nGenerally used by the command line application","ref":"Hanoi.Render.html"},{"type":"function","title":"Hanoi.Render.render_to_string/1","doc":"Renders a board   as a  .","ref":"Hanoi.Render.html#render_to_string/1"},{"type":"module","title":"Hanoi.TowerGame","doc":"The Hanoi game as a public API & state.\n\nEach individual game should run as one of these. They will exist \nindependently of each other.\n\nRuns as a supervisor and starts a GenServer to process work and an\nETS instance to hold state. Usually run as part of an OTP application.","ref":"Hanoi.TowerGame.html"},{"type":"function","title":"Hanoi.TowerGame.add_game/2","doc":"Functions that adds another game\nA game is an ETS table and a genserver under supervision","ref":"Hanoi.TowerGame.html#add_game/2"},{"type":"function","title":"Hanoi.TowerGame.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"Hanoi.TowerGame.html#child_spec/1"},{"type":"function","title":"Hanoi.TowerGame.count_games/0","doc":"Functions that returns how many games are currently running","ref":"Hanoi.TowerGame.html#count_games/0"},{"type":"function","title":"Hanoi.TowerGame.delete_game/1","doc":"Function that terminates a session. Called by Session Purger for games where no move\nhas been made for a while","ref":"Hanoi.TowerGame.html#delete_game/1"},{"type":"function","title":"Hanoi.TowerGame.get_moves/1","doc":"Function that for a board with all stones on left pile will move them\nin a legal way (no big stone on small stone) to the right hand pile","ref":"Hanoi.TowerGame.html#get_moves/1"},{"type":"function","title":"Hanoi.TowerGame.get_number_moves/1","doc":"Function returning the number of moves that have been played.","ref":"Hanoi.TowerGame.html#get_number_moves/1"},{"type":"function","title":"Hanoi.TowerGame.get_number_stones/1","doc":"Function that returns the number of stones on the board.","ref":"Hanoi.TowerGame.html#get_number_stones/1"},{"type":"function","title":"Hanoi.TowerGame.get_state/1","doc":"Function returning the current state of the hanoi board","ref":"Hanoi.TowerGame.html#get_state/1"},{"type":"function","title":"Hanoi.TowerGame.get_state_as_text/1","doc":"Debug function returning current state of hanoi board in a textual\nrepresentation.","ref":"Hanoi.TowerGame.html#get_state_as_text/1"},{"type":"function","title":"Hanoi.TowerGame.is_complete/1","doc":"Funtion returns true if game is complete\nThat is all stones in correct order on right hand pile","ref":"Hanoi.TowerGame.html#is_complete/1"},{"type":"function","title":"Hanoi.TowerGame.move_stone/3","doc":"Funtion that moves a stone between piles. \nWill error if the stone is bigger than the one at the top of the pile.\nIncrements moves taken.","ref":"Hanoi.TowerGame.html#move_stone/3"},{"type":"function","title":"Hanoi.TowerGame.reset/2","doc":"Restarts a game with a new number of stones on the board.\nResets move count","ref":"Hanoi.TowerGame.html#reset/2"},{"type":"function","title":"Hanoi.TowerGame.show_games/0","doc":"Functions that returns information on the games currently running\n\n    [\n      [class: Hanoi.TowerState, name: :Hanoi_91924B39, pid: #PID<0.486.0>, stones: 7, moves: 0, age: 152],\n      [class: Hanoi.TowerState, name: :Hanoi_31148637, pid: #PID<0.515.0>, stones: 6, moves: 32, age: 83]\n    ]","ref":"Hanoi.TowerGame.html#show_games/0"},{"type":"function","title":"Hanoi.TowerGame.start_link/1","doc":"Call this function to start up the module. Name and Stones must be provided.","ref":"Hanoi.TowerGame.html#start_link/1"},{"type":"module","title":"HanoiWeb.CoreComponents","doc":"Provides core UI components.\n\nAt first glance, this module may seem daunting, but its goal is to provide\ncore building blocks for your application, such as modals, tables, and\nforms. The components consist mostly of markup and are well-documented\nwith doc strings and declarative assigns. You may customize and style\nthem in any way you want, based on your application growth and needs.\n\nThe default components use Tailwind CSS, a utility-first CSS framework.\nSee the [Tailwind CSS documentation](https://tailwindcss.com) to learn\nhow to customize them or feel free to swap in another framework altogether.\n\nIcons are provided by [heroicons](https://heroicons.com). See `icon/1` for usage.","ref":"HanoiWeb.CoreComponents.html"},{"type":"function","title":"HanoiWeb.CoreComponents.back/1","doc":"Renders a back navigation link.","ref":"HanoiWeb.CoreComponents.html#back/1"},{"type":"function","title":"Examples - HanoiWeb.CoreComponents.back/1","doc":"<.back navigate={~p\"/posts\"}>Back to posts</.back>","ref":"HanoiWeb.CoreComponents.html#back/1-examples"},{"type":"function","title":"Attributes - HanoiWeb.CoreComponents.back/1","doc":"* `navigate` (`:any`) (required)","ref":"HanoiWeb.CoreComponents.html#back/1-attributes"},{"type":"function","title":"Slots - HanoiWeb.CoreComponents.back/1","doc":"* `inner_block` (required)","ref":"HanoiWeb.CoreComponents.html#back/1-slots"},{"type":"function","title":"HanoiWeb.CoreComponents.button/1","doc":"Renders a button.","ref":"HanoiWeb.CoreComponents.html#button/1"},{"type":"function","title":"Examples - HanoiWeb.CoreComponents.button/1","doc":"<.button>Send!</.button>\n    <.button phx-click=\"go\" class=\"ml-2\">Send!</.button>","ref":"HanoiWeb.CoreComponents.html#button/1-examples"},{"type":"function","title":"Attributes - HanoiWeb.CoreComponents.button/1","doc":"* `type` (`:string`) - Defaults to `nil`.\n* `class` (`:string`) - Defaults to `nil`.\n* Global attributes are accepted. Supports all globals plus: `[\"disabled\", \"form\", \"name\", \"value\"]`.","ref":"HanoiWeb.CoreComponents.html#button/1-attributes"},{"type":"function","title":"Slots - HanoiWeb.CoreComponents.button/1","doc":"* `inner_block` (required)","ref":"HanoiWeb.CoreComponents.html#button/1-slots"},{"type":"function","title":"HanoiWeb.CoreComponents.error/1","doc":"Generates a generic error message.","ref":"HanoiWeb.CoreComponents.html#error/1"},{"type":"function","title":"Slots - HanoiWeb.CoreComponents.error/1","doc":"* `inner_block` (required)","ref":"HanoiWeb.CoreComponents.html#error/1-slots"},{"type":"function","title":"HanoiWeb.CoreComponents.flash/1","doc":"Renders flash notices.","ref":"HanoiWeb.CoreComponents.html#flash/1"},{"type":"function","title":"Examples - HanoiWeb.CoreComponents.flash/1","doc":"<.flash kind={:info} flash={@flash} />\n    <.flash kind={:info} phx-mounted={show(\"#flash\")}>Welcome Back!</.flash>","ref":"HanoiWeb.CoreComponents.html#flash/1-examples"},{"type":"function","title":"Attributes - HanoiWeb.CoreComponents.flash/1","doc":"* `id` (`:string`) - the optional id of flash container.\n* `flash` (`:map`) - the map of flash messages to display. Defaults to `%{}`.\n* `title` (`:string`) - Defaults to `nil`.\n* `kind` (`:atom`) - used for styling and flash lookup.Must be one of `:info`, or `:error`.\n* Global attributes are accepted. the arbitrary HTML attributes to add to the flash container.","ref":"HanoiWeb.CoreComponents.html#flash/1-attributes"},{"type":"function","title":"Slots - HanoiWeb.CoreComponents.flash/1","doc":"* `inner_block` - the optional inner block that renders the flash message.","ref":"HanoiWeb.CoreComponents.html#flash/1-slots"},{"type":"function","title":"HanoiWeb.CoreComponents.flash_group/1","doc":"Shows the flash group with standard titles and content.","ref":"HanoiWeb.CoreComponents.html#flash_group/1"},{"type":"function","title":"Examples - HanoiWeb.CoreComponents.flash_group/1","doc":"<.flash_group flash={@flash} />","ref":"HanoiWeb.CoreComponents.html#flash_group/1-examples"},{"type":"function","title":"Attributes - HanoiWeb.CoreComponents.flash_group/1","doc":"* `flash` (`:map`) (required) - the map of flash messages.\n* `id` (`:string`) - the optional id of flash container. Defaults to `\"flash-group\"`.","ref":"HanoiWeb.CoreComponents.html#flash_group/1-attributes"},{"type":"function","title":"HanoiWeb.CoreComponents.header/1","doc":"Renders a header with title.","ref":"HanoiWeb.CoreComponents.html#header/1"},{"type":"function","title":"Attributes - HanoiWeb.CoreComponents.header/1","doc":"* `class` (`:string`) - Defaults to `nil`.","ref":"HanoiWeb.CoreComponents.html#header/1-attributes"},{"type":"function","title":"Slots - HanoiWeb.CoreComponents.header/1","doc":"* `inner_block` (required)\n* `subtitle`\n* `actions`","ref":"HanoiWeb.CoreComponents.html#header/1-slots"},{"type":"function","title":"HanoiWeb.CoreComponents.hide/2","doc":"","ref":"HanoiWeb.CoreComponents.html#hide/2"},{"type":"function","title":"HanoiWeb.CoreComponents.hide_modal/2","doc":"","ref":"HanoiWeb.CoreComponents.html#hide_modal/2"},{"type":"function","title":"HanoiWeb.CoreComponents.icon/1","doc":"Renders a [Heroicon](https://heroicons.com).\n\nHeroicons come in three styles – outline, solid, and mini.\nBy default, the outline style is used, but solid and mini may\nbe applied by using the `-solid` and `-mini` suffix.\n\nYou can customize the size and colors of the icons by setting\nwidth, height, and background color classes.\n\nIcons are extracted from your `assets/vendor/heroicons` directory and bundled\nwithin your compiled app.css by the plugin in your `assets/tailwind.config.js`.","ref":"HanoiWeb.CoreComponents.html#icon/1"},{"type":"function","title":"Examples - HanoiWeb.CoreComponents.icon/1","doc":"<.icon name=\"hero-x-mark-solid\" />\n    <.icon name=\"hero-arrow-path\" class=\"ml-1 w-3 h-3 animate-spin\" />","ref":"HanoiWeb.CoreComponents.html#icon/1-examples"},{"type":"function","title":"Attributes - HanoiWeb.CoreComponents.icon/1","doc":"* `name` (`:string`) (required)\n* `class` (`:string`) - Defaults to `nil`.","ref":"HanoiWeb.CoreComponents.html#icon/1-attributes"},{"type":"function","title":"HanoiWeb.CoreComponents.input/1","doc":"Renders an input with label and error messages.\n\nA `Phoenix.HTML.FormField` may be passed as argument,\nwhich is used to retrieve the input name, id, and values.\nOtherwise all attributes may be passed explicitly.","ref":"HanoiWeb.CoreComponents.html#input/1"},{"type":"function","title":"Types - HanoiWeb.CoreComponents.input/1","doc":"This function accepts all HTML input types, considering that:\n\n  * You may also set `type=\"select\"` to render a ` ` tag\n\n  * `type=\"checkbox\"` is used exclusively to render boolean values\n\n  * For live file uploads, see `Phoenix.Component.live_file_input/1`\n\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input\nfor more information.","ref":"HanoiWeb.CoreComponents.html#input/1-types"},{"type":"function","title":"Examples - HanoiWeb.CoreComponents.input/1","doc":"<.input field={@form[:email]} type=\"email\" />\n    <.input name=\"my-input\" errors={[\"oh no!\"]} />","ref":"HanoiWeb.CoreComponents.html#input/1-examples"},{"type":"function","title":"Attributes - HanoiWeb.CoreComponents.input/1","doc":"* `id` (`:any`) - Defaults to `nil`.\n* `name` (`:any`)\n* `label` (`:string`) - Defaults to `nil`.\n* `value` (`:any`)\n* `type` (`:string`) - Defaults to `\"text\"`.\n* `field` (`Phoenix.HTML.FormField`) - a form field struct retrieved from the form, for example: @form[:email].\n* `errors` (`:list`) - Defaults to `[]`.\n* `checked` (`:boolean`) - the checked flag for checkbox inputs.\n* `prompt` (`:string`) - the prompt for select inputs. Defaults to `nil`.\n* `options` (`:list`) - the options to pass to Phoenix.HTML.Form.options_for_select/2.\n* `multiple` (`:boolean`) - the multiple flag for select inputs. Defaults to `false`.\n* Global attributes are accepted. Supports all globals plus: `[\"accept\", \"autocomplete\", \"capture\", \"cols\", \"disabled\", \"form\", \"list\", \"max\", \"maxlength\", \"min\", \"minlength\", \"multiple\", \"pattern\", \"placeholder\", \"readonly\", \"required\", \"rows\", \"size\", \"step\"]`.","ref":"HanoiWeb.CoreComponents.html#input/1-attributes"},{"type":"function","title":"Slots - HanoiWeb.CoreComponents.input/1","doc":"* `inner_block`","ref":"HanoiWeb.CoreComponents.html#input/1-slots"},{"type":"function","title":"HanoiWeb.CoreComponents.label/1","doc":"Renders a label.","ref":"HanoiWeb.CoreComponents.html#label/1"},{"type":"function","title":"Attributes - HanoiWeb.CoreComponents.label/1","doc":"* `for` (`:string`) - Defaults to `nil`.","ref":"HanoiWeb.CoreComponents.html#label/1-attributes"},{"type":"function","title":"Slots - HanoiWeb.CoreComponents.label/1","doc":"* `inner_block` (required)","ref":"HanoiWeb.CoreComponents.html#label/1-slots"},{"type":"function","title":"HanoiWeb.CoreComponents.list/1","doc":"Renders a data list.","ref":"HanoiWeb.CoreComponents.html#list/1"},{"type":"function","title":"Examples - HanoiWeb.CoreComponents.list/1","doc":"<.list>\n      <:item title=\"Title\"><%= @post.title %></:item>\n      <:item title=\"Views\"><%= @post.views %></:item>\n    </.list>","ref":"HanoiWeb.CoreComponents.html#list/1-examples"},{"type":"function","title":"Slots - HanoiWeb.CoreComponents.list/1","doc":"* `item` (required) - Accepts attributes:\n\n  * `title` (`:string`) (required)","ref":"HanoiWeb.CoreComponents.html#list/1-slots"},{"type":"function","title":"HanoiWeb.CoreComponents.modal/1","doc":"Renders a modal.","ref":"HanoiWeb.CoreComponents.html#modal/1"},{"type":"function","title":"Examples - HanoiWeb.CoreComponents.modal/1","doc":"<.modal id=\"confirm-modal\">\n      This is a modal.\n    </.modal>\n\nJS commands may be passed to the `:on_cancel` to configure\nthe closing/cancel event, for example:\n\n    <.modal id=\"confirm\" on_cancel={JS.navigate(~p\"/posts\")}>\n      This is another modal.\n    </.modal>","ref":"HanoiWeb.CoreComponents.html#modal/1-examples"},{"type":"function","title":"Attributes - HanoiWeb.CoreComponents.modal/1","doc":"* `id` (`:string`) (required)\n* `show` (`:boolean`) - Defaults to `false`.\n* `on_cancel` (`Phoenix.LiveView.JS`) - Defaults to `%Phoenix.LiveView.JS{ops: []}`.","ref":"HanoiWeb.CoreComponents.html#modal/1-attributes"},{"type":"function","title":"Slots - HanoiWeb.CoreComponents.modal/1","doc":"* `inner_block` (required)","ref":"HanoiWeb.CoreComponents.html#modal/1-slots"},{"type":"function","title":"HanoiWeb.CoreComponents.show/2","doc":"","ref":"HanoiWeb.CoreComponents.html#show/2"},{"type":"function","title":"HanoiWeb.CoreComponents.show_modal/2","doc":"","ref":"HanoiWeb.CoreComponents.html#show_modal/2"},{"type":"function","title":"HanoiWeb.CoreComponents.simple_form/1","doc":"Renders a simple form.","ref":"HanoiWeb.CoreComponents.html#simple_form/1"},{"type":"function","title":"Examples - HanoiWeb.CoreComponents.simple_form/1","doc":"<.simple_form for={@form} phx-change=\"validate\" phx-submit=\"save\">\n      <.input field={@form[:email]} label=\"Email\"/>\n      <.input field={@form[:username]} label=\"Username\" />\n      <:actions>\n        <.button>Save</.button>\n      </:actions>\n    </.simple_form>","ref":"HanoiWeb.CoreComponents.html#simple_form/1-examples"},{"type":"function","title":"Attributes - HanoiWeb.CoreComponents.simple_form/1","doc":"* `for` (`:any`) (required) - the datastructure for the form.\n* `as` (`:any`) - the server side parameter to collect all input under. Defaults to `nil`.\n* Global attributes are accepted. the arbitrary HTML attributes to apply to the form tag. Supports all globals plus: `[\"autocomplete\", \"name\", \"rel\", \"action\", \"enctype\", \"method\", \"novalidate\", \"target\", \"multipart\"]`.","ref":"HanoiWeb.CoreComponents.html#simple_form/1-attributes"},{"type":"function","title":"Slots - HanoiWeb.CoreComponents.simple_form/1","doc":"* `inner_block` (required)\n* `actions` - the slot for form actions, such as a submit button.","ref":"HanoiWeb.CoreComponents.html#simple_form/1-slots"},{"type":"function","title":"HanoiWeb.CoreComponents.table/1","doc":"Renders a table with generic styling.","ref":"HanoiWeb.CoreComponents.html#table/1"},{"type":"function","title":"Examples - HanoiWeb.CoreComponents.table/1","doc":"<.table id=\"users\" rows={@users}>\n      <:col :let={user} label=\"id\"><%= user.id %></:col>\n      <:col :let={user} label=\"username\"><%= user.username %></:col>\n    </.table>","ref":"HanoiWeb.CoreComponents.html#table/1-examples"},{"type":"function","title":"Attributes - HanoiWeb.CoreComponents.table/1","doc":"* `id` (`:string`) (required)\n* `rows` (`:list`) (required)\n* `row_id` (`:any`) - the function for generating the row id. Defaults to `nil`.\n* `row_click` (`:any`) - the function for handling phx-click on each row. Defaults to `nil`.\n* `row_item` (`:any`) - the function for mapping each row before calling the :col and :action slots. Defaults to `&Function.identity/1`.","ref":"HanoiWeb.CoreComponents.html#table/1-attributes"},{"type":"function","title":"Slots - HanoiWeb.CoreComponents.table/1","doc":"* `col` (required) - Accepts attributes:\n\n  * `label` (`:string`)\n* `action` - the slot for showing user actions in the last table column.","ref":"HanoiWeb.CoreComponents.html#table/1-slots"},{"type":"function","title":"HanoiWeb.CoreComponents.translate_error/1","doc":"Translates an error message using gettext.","ref":"HanoiWeb.CoreComponents.html#translate_error/1"},{"type":"function","title":"HanoiWeb.CoreComponents.translate_errors/2","doc":"Translates the errors for a field from a keyword list of errors.","ref":"HanoiWeb.CoreComponents.html#translate_errors/2"},{"type":"module","title":"HanoiWeb.HanoiGameControllerLive","doc":"Controller that renders the main Hanoi game page\n\nReceives liveview events from the page and updates state accordingly\n\nMain page furniture is rendered here. The main board visual rendering \nfunctions are in RenderBoard.\n\n \n%%{init: {'theme':'dark'}}%%\ngraph LR;\nclassDef server fill:#709421,stroke:#AD9121,stroke-width:1px;\nclassDef supervision fill:#D000FF,stroke:#D0B441,stroke-width:1px;\nclassDef topic fill:#0059DF,stroke:#312378,stroke-width:1px;\nclassDef db fill:#9E74BE,stroke:#4E1C74,stroke-width:1px;\nsubgraph App\nT0(Application):::supervision\nend\nsubgraph Session\nS1(IdPlug):::topic\nS2(Purger):::server\nend\nsubgraph Web\nT2(Hanoi_GameControllerLive):::topic\nT3(Hanoi_GameView):::topic\nT4(CoreComponents):::topic\nend\nsubgraph Server\nG1(TowerGame):::supervision;\nG2(TowerState):::server;\nend\nsubgraph Algo\nT5(Board):::topic;\nT6(Algo):::topic;\nend\nT0(Application):::supervision --> T1{{Phoenix Webserver}}:::topic;\nT0(Application):::supervision --> S2(Purger):::server;\nT1{{Phoenix Webserver}}:::topic -- Controller --> T2(hanoi_game_controller_live):::topic;\nT1{{Phoenix Webserver}}:::topic --> S1(IdPlug):::topic\nT2(Hanoi_GameControllerLive):::topic -- View --> T3(HanoiGameView):::topic;\nT3(Hanoi_GameView):::topic --> T4(CoreComponents):::topic;\nT2(Hanoi_GameControllerLive):::topic -- Model --> G1(TowerGame):::supervision;\nS2(Purger):::server --> G1(TowerGame)\nG1(TowerGame):::supervision -- per game --> G2(TowerState):::server; \nG2(TowerState):::server --> DB[(\"ETS#nbsp;\")]:::db;\nG2(TowerState):::server --> T5(Board):::topic;\nG2(TowerState):::server --> T6(Algo):::topic;","ref":"HanoiWeb.HanoiGameControllerLive.html"},{"type":"function","title":"HanoiWeb.HanoiGameControllerLive.handle_event/3","doc":"Handle the auto_mode, move_stone & reset clicks from page","ref":"HanoiWeb.HanoiGameControllerLive.html#handle_event/3"},{"type":"function","title":"HanoiWeb.HanoiGameControllerLive.handle_info/2","doc":"Handle the refresh_board messages triggered by auto_mode","ref":"HanoiWeb.HanoiGameControllerLive.html#handle_info/2"},{"type":"function","title":"HanoiWeb.HanoiGameControllerLive.mount/3","doc":"Set up initial liveview state","ref":"HanoiWeb.HanoiGameControllerLive.html#mount/3"},{"type":"function","title":"HanoiWeb.HanoiGameControllerLive.render/1","doc":"Render the page based on current state","ref":"HanoiWeb.HanoiGameControllerLive.html#render/1"},{"type":"module","title":"HanoiWeb.HanoiGameView","doc":"Supporing functions for the main page rendering controller","ref":"HanoiWeb.HanoiGameView.html"},{"type":"function","title":"HanoiWeb.HanoiGameView.render_automode_control/1","doc":"Renders the demo automode block","ref":"HanoiWeb.HanoiGameView.html#render_automode_control/1"},{"type":"function","title":"HanoiWeb.HanoiGameView.render_board/1","doc":"Renders the board as a pile of stones","ref":"HanoiWeb.HanoiGameView.html#render_board/1"},{"type":"function","title":"HanoiWeb.HanoiGameView.render_css/1","doc":"Define the CSS needed to render the stones board","ref":"HanoiWeb.HanoiGameView.html#render_css/1"},{"type":"function","title":"HanoiWeb.HanoiGameView.render_error_text/1","doc":"Renders any error messages","ref":"HanoiWeb.HanoiGameView.html#render_error_text/1"},{"type":"function","title":"HanoiWeb.HanoiGameView.render_game_controls/1","doc":"Renders the controls for moving stones","ref":"HanoiWeb.HanoiGameView.html#render_game_controls/1"},{"type":"function","title":"HanoiWeb.HanoiGameView.render_help_modal/1","doc":"Show game instructions","ref":"HanoiWeb.HanoiGameView.html#render_help_modal/1"},{"type":"function","title":"HanoiWeb.HanoiGameView.render_number_moves/1","doc":"Renders the current move count","ref":"HanoiWeb.HanoiGameView.html#render_number_moves/1"},{"type":"function","title":"HanoiWeb.HanoiGameView.render_pile/2","doc":"Render each individual pile on the board","ref":"HanoiWeb.HanoiGameView.html#render_pile/2"},{"type":"function","title":"HanoiWeb.HanoiGameView.render_reset_block/1","doc":"Renders reset dropdown and button","ref":"HanoiWeb.HanoiGameView.html#render_reset_block/1"},{"type":"function","title":"HanoiWeb.HanoiGameView.render_stone/2","doc":"Render an individual stone in a pile","ref":"HanoiWeb.HanoiGameView.html#render_stone/2"},{"type":"module","title":"HanoiWeb.Session.IdPlug","doc":"This module plugs into the phoenix request handling and checks if a session_id exists. If it doesn't\nit creates one based on a 4-digit hexadecimal random number.\n\nA TowerState GenServer and ETS table are created per-session and use this id as their unique name.","ref":"HanoiWeb.Session.IdPlug.html"},{"type":"function","title":"HanoiWeb.Session.IdPlug.call/2","doc":"Check session for an :session_id variable and create one if missing.","ref":"HanoiWeb.Session.IdPlug.html#call/2"},{"type":"module","title":"HanoiWeb.Session.Purge","doc":"Purges per-session TowerState GenServer process and ETS table when no longer needed.\n\nTo make sure these don't build up over time, we check for last used time (created, or last move). Every\npurge_gap, a process runs looking for old sessions - that is last used > purge_time - and deletes them.","ref":"HanoiWeb.Session.Purge.html"},{"type":"function","title":"HanoiWeb.Session.Purge.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"HanoiWeb.Session.Purge.html#child_spec/1"},{"type":"function","title":"HanoiWeb.Session.Purge.handle_info/2","doc":"Function collects all the current game sessions, filters by age and deletes old ones.\nIt then calls itself creating continuous loop of purging.","ref":"HanoiWeb.Session.Purge.html#handle_info/2"},{"type":"function","title":"HanoiWeb.Session.Purge.init/1","doc":"Stores :purge_time in GenServer state. \nSends first message to :run_purge, starting the continuous purging cycle.","ref":"HanoiWeb.Session.Purge.html#init/1"},{"type":"module","title":"TowerHanoi","doc":"Command Line application version of the Tower of Hanoi.\n\nSets up a board and then runs the algorithm. Just uses the domain model\nand alorithm, avoiding OTP.\n\nAn alternative to the OTP Phoenix application\n\n \ngraph TD;\nclassDef server fill:#D0B441,stroke:#AD9121,stroke-width:1px;\nclassDef supervision fill:#D000FF,stroke:#D0B441,stroke-width:1px;\nclassDef topic fill:#B5ADDF,stroke:#312378,stroke-width:1px;\nclassDef db fill:#9E74BE,stroke:#4E1C74,stroke-width:1px;\nsubgraph CLI\nG1(TowerHanoi):::supervision; \nT1(CLI):::topic; \nend\nsubgraph Algo\nT2(Board):::topic;\nT3(Algo):::topic;\nT4(Render):::topic; \nend\nG1(TowerHanoi):::supervision ==> T1(CLI):::topic; \nG1(TowerHanoi):::supervision ==> T2(Board):::topic;\nG1(TowerHanoi):::supervision ==> T3(Algo):::topic;\nG1(TowerHanoi):::supervision ==> T4(Render):::topic;","ref":"TowerHanoi.html"},{"type":"function","title":"TowerHanoi.main/1","doc":"Main command-line entry point. Gets arguments parsed responds accordingly.","ref":"TowerHanoi.html#main/1"},{"type":"extras","title":"Elixir: Towers of Hanoi","doc":"# Elixir: Towers of Hanoi\n\nAn implementation of Towers of Hanoi written in Elixir. \n\nFeatures\n1. Simple example of how to use [phoenix live-view](https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html), genserver and [tailwind](https://tailwindcss.com)\n2. Can play yourself (manual mode) or be shown how to do it (auto-play)\n3. Tracks how many steps are taken to complete \n4. Can run locally or be built into a [docker](https://docs.docker.com) image\n5. Decent test coverage inc static analysis with [dialyzer](https://www.erlang.org/doc/man/dialyzer.html)\n6. [API documentation](https://garethwebber.github.io/elixir-tower-hanoi/api-reference.html) including [architecture diagrams](https://garethwebber.github.io/elixir-tower-hanoi/HanoiWeb.HanoiGameControllerLive.html)\n\nWhen I was learning elixir, the examples I saw felt ideomatically OO\n(e.g. [1]) rather than  functional so I decided to write one myself, leaning into FP. Having \ngot the CLI running, I didn't stop there and ended up building a LiveView web-app because, why not?\n\nObviously having written this as a critique of structure - feel free to comment on what I have done. All greatfully accepted.","ref":"readme.html"},{"type":"extras","title":"How to run - Elixir: Towers of Hanoi","doc":"Full details on how to run either as a webapp, gen_server or command line can be [on this page](https://garethwebber.github.io/elixir-tower-hanoi/howtorun.html).\n\n![screenshot](https://garethwebber.github.io/elixir-tower-hanoi/web-view.jpg)","ref":"readme.html#how-to-run"},{"type":"extras","title":"Web Architecture - Elixir: Towers of Hanoi","doc":"![architecture](https://garethwebber.github.io/elixir-tower-hanoi/architecture.jpg)","ref":"readme.html#web-architecture"},{"type":"extras","title":"Command-line Architecture - Elixir: Towers of Hanoi","doc":"![cli-architecture](https://garethwebber.github.io/elixir-tower-hanoi/architecture-cli.jpg)","ref":"readme.html#command-line-architecture"},{"type":"extras","title":"References - Elixir: Towers of Hanoi","doc":"[1] https://github.com/wouterken/towers-of-hanoi-elixir","ref":"readme.html#references"},{"type":"extras","title":"How to Run","doc":"# How to Run \n\nTo run, first get dependencies, ```mix deps.get```.  \n\nBuild with ```mix compile```.\n\nIf you want to run the tests, ```mix test```.\n\nIf you want documents, run ```mix docs``` and point your browser at documents\ndirectory.","ref":"howtorun.html"},{"type":"extras","title":"Running in web-server - How to Run","doc":"Run ```iex -S mix phx.server``` and then point your web-browser at http://localhost:4000","ref":"howtorun.html#running-in-web-server"},{"type":"extras","title":"Running GenServer - How to Run","doc":"To start run ```iex -S mix```.\n\n```\nInteractive Elixir (1.16.0) - press Ctrl+C to exit (type h() ENTER for help)\niex(1)> Hanoi.TowerGame.start_link(%{name: :hello, stones: 3})\n{:ok, #PID<0.186.0>}\niex(2)> Hanoi.TowerGame.get_state(:hello)\n%Hanoi.Board{left: [1, 2, 3], centre: [], right: []}\niex(3)> Hanoi.TowerGame.get_moves(:hello)\n[\n  left: :right,\n  left: :centre,\n  right: :centre,\n  left: :right,\n  centre: :left,\n  centre: :right,\n  left: :right\n]\niex(4)> Hanoi.TowerGame.move_stone(:hello, :left, :centre)\n:ok\niex(5)> Hanoi.TowerGame.move_stone(:hello, :left, :right)\n:ok\niex(6)> Hanoi.TowerGame.get_state(:hello)\n%Hanoi.Board{left: [3], centre: [1], right: [2]}\n```","ref":"howtorun.html#running-genserver"},{"type":"extras","title":"Running from command line - How to Run","doc":"Build the executable with ```mix escript.build```.\n\nTo run then call ```./hanoi  ``` being careful not to set the\nnumber too high (20 takes 20 odd seconds and each extra doubles it).\n\n#","ref":"howtorun.html#running-from-command-line"},{"type":"extras","title":"Results - How to Run","doc":"Example results\n\n```\nTower of Hanoi\n\nL 3 2 1\nC\nR\n\nL 3 2\nC\nR 1\n\nL 3\nC 2\nR 1\n\nL 3\nC 2 1\nR\n\nL\nC 2 1\nR 3\n\nL 1\nC 2\nR 3\n\nL 1\nC\nR 3 2\n\nL\nC\nR 3 2 1\n\n3 stones took 2 millisecond(s).\n```","ref":"howtorun.html#results"},{"type":"extras","title":"References - How to Run","doc":"[1] https://github.com/wouterken/towers-of-hanoi-elixir","ref":"howtorun.html#references"},{"type":"extras","title":"LICENSE","doc":"Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.","ref":"license.html"}],"content_type":"text/markdown"}